{
  assertEqualBool(
    u256tobool(1:u256),
    true:bool
  )
  assertEqualBool(
    u256tobool(2:u256),
    true:bool
  )
  assertEqualBool(
    u256tobool(3:u256),
    true:bool
  )
  assertEqualBool(
    u256tobool(10:u256),
    true:bool
  )
  assertEqualBool(
    u256tobool(10000:u256),
    true:bool
  )
  assertEqualBool(
    u256tobool(100000000000000000:u256),
    true:bool
  )
  assertEqualBool(
    u256tobool(18446744073709551614:u256),
    true:bool
  )
  assertEqualBool(
    u256tobool(18446744073709551615:u256),
    true:bool
  )
  assertEqualBool(
    u256tobool(18446744073709551616:u256),
    true:bool
  )
  assertEqualBool(
    u256tobool(100000000000000000000000000000:u256),
    true:bool
  )
  assertEqualBool(
    u256tobool(10000000000000000000000000000000000000:u256),
    true:bool
  )
  assertEqualBool(
    u256tobool(10000000000000000000000000000000000000000000000:u256),
    true:bool
  )
  assertEqualBool(
    u256tobool(100000000000000000000000000000000000000000000000000000000:u256),
    true:bool
  )
  assertEqualBool(
    u256tobool(100000000000000000000000000000000000000000000000000000000000000000000:u256),
    true:bool
  )
  assertEqualBool(
    u256tobool(57896044618658097711785492504343953926634992332820282019728792003956564819966:u256),
    true:bool
  )
  assertEqualBool(
    u256tobool(57896044618658097711785492504343953926634992332820282019728792003956564819967:u256),
    true:bool
  )
  assertEqualBool(
    u256tobool(57896044618658097711785492504343953926634992332820282019728792003956564819968:u256),
    true:bool
  )
  assertEqualBool(
    u256tobool(115792089237316195423570985008687907853269984665640564039457584007913129639934:u256),
    true:bool
  )
  assertEqualBool(
    u256tobool(115792089237316195423570985008687907853269984665640564039457584007913129639935:u256),
    true:bool
  )
  assertEqualU32(
    u256tou32(0:u256),
    0:u32
  )
  assertEqualU32(
    u256tou32(1:u256),
    1:u32
  )
  assertEqualU32(
    u256tou32(2:u256),
    2:u32
  )
  assertEqualU32(
    u256tou32(3:u256),
    3:u32
  )
  assertEqualU32(
    u256tou32(10:u256),
    10:u32
  )
  assertEqualU32(
    u256tou32(10000:u256),
    10000:u32
  )
  assertEqualU32(
    u256tou32(100000000000000000:u256),
    1569325056:u32
  )
  assertEqualU32(
    u256tou32(18446744073709551614:u256),
    4294967294:u32
  )
  assertEqualU32(
    u256tou32(18446744073709551615:u256),
    4294967295:u32
  )
  assertEqualU32(
    u256tou32(18446744073709551616:u256),
    0:u32
  )
  assertEqualU32(
    u256tou32(100000000000000000000000000000:u256),
    2684354560:u32
  )
  assertEqualU32(
    u256tou32(10000000000000000000000000000000000000:u256),
    0:u32
  )
  assertEqualU32(
    u256tou32(10000000000000000000000000000000000000000000000:u256),
    0:u32
  )
  assertEqualU32(
    u256tou32(100000000000000000000000000000000000000000000000000000000:u256),
    0:u32
  )
  assertEqualU32(
    u256tou32(100000000000000000000000000000000000000000000000000000000000000000000:u256),
    0:u32
  )
  assertEqualU32(
    u256tou32(57896044618658097711785492504343953926634992332820282019728792003956564819966:u256),
    4294967294:u32
  )
  assertEqualU32(
    u256tou32(57896044618658097711785492504343953926634992332820282019728792003956564819967:u256),
    4294967295:u32
  )
  assertEqualU32(
    u256tou32(57896044618658097711785492504343953926634992332820282019728792003956564819968:u256),
    0:u32
  )
  assertEqualU32(
    u256tou32(115792089237316195423570985008687907853269984665640564039457584007913129639934:u256),
    4294967294:u32
  )
  assertEqualU32(
    u256tou32(115792089237316195423570985008687907853269984665640564039457584007913129639935:u256),
    4294967295:u32
  )
  assertEqualU64(
    u256tou64(0:u256),
    0:u64
  )
  assertEqualU64(
    u256tou64(1:u256),
    1:u64
  )
  assertEqualU64(
    u256tou64(2:u256),
    2:u64
  )
  assertEqualU64(
    u256tou64(3:u256),
    3:u64
  )
  assertEqualU64(
    u256tou64(10:u256),
    10:u64
  )
  assertEqualU64(
    u256tou64(10000:u256),
    10000:u64
  )
  assertEqualU64(
    u256tou64(100000000000000000:u256),
    100000000000000000:u64
  )
  assertEqualU64(
    u256tou64(18446744073709551614:u256),
    18446744073709551614:u64
  )
  assertEqualU64(
    u256tou64(18446744073709551615:u256),
    18446744073709551615:u64
  )
  assertEqualU64(
    u256tou64(18446744073709551616:u256),
    0:u64
  )
  assertEqualU64(
    u256tou64(100000000000000000000000000000:u256),
    7886392056514347008:u64
  )
  assertEqualU64(
    u256tou64(10000000000000000000000000000000000000:u256),
    68739955140067328:u64
  )
  assertEqualU64(
    u256tou64(10000000000000000000000000000000000000000000000:u256),
    8023796054858137600:u64
  )
  assertEqualU64(
    u256tou64(100000000000000000000000000000000000000000000000000000000:u256),
    2377900603251621888:u64
  )
  assertEqualU64(
    u256tou64(100000000000000000000000000000000000000000000000000000000000000000000:u256),
    0:u64
  )
  assertEqualU64(
    u256tou64(57896044618658097711785492504343953926634992332820282019728792003956564819966:u256),
    18446744073709551614:u64
  )
  assertEqualU64(
    u256tou64(57896044618658097711785492504343953926634992332820282019728792003956564819967:u256),
    18446744073709551615:u64
  )
  assertEqualU64(
    u256tou64(57896044618658097711785492504343953926634992332820282019728792003956564819968:u256),
    0:u64
  )
  assertEqualU64(
    u256tou64(115792089237316195423570985008687907853269984665640564039457584007913129639934:u256),
    18446744073709551614:u64
  )
  assertEqualU64(
    u256tou64(115792089237316195423570985008687907853269984665640564039457584007913129639935:u256),
    18446744073709551615:u64
  )
  assertEqualS256(
    u256tos256(0:u256),
    0:s256
  )
  assertEqualS256(
    u256tos256(1:u256),
    1:s256
  )
  assertEqualS256(
    u256tos256(2:u256),
    2:s256
  )
  assertEqualS256(
    u256tos256(3:u256),
    3:s256
  )
  assertEqualS256(
    u256tos256(10:u256),
    10:s256
  )
  assertEqualS256(
    u256tos256(10000:u256),
    10000:s256
  )
  assertEqualS256(
    u256tos256(100000000000000000:u256),
    100000000000000000:s256
  )
  assertEqualS256(
    u256tos256(18446744073709551614:u256),
    18446744073709551614:s256
  )
  assertEqualS256(
    u256tos256(18446744073709551615:u256),
    18446744073709551615:s256
  )
  assertEqualS256(
    u256tos256(18446744073709551616:u256),
    18446744073709551616:s256
  )
  assertEqualS256(
    u256tos256(100000000000000000000000000000:u256),
    100000000000000000000000000000:s256
  )
  assertEqualS256(
    u256tos256(10000000000000000000000000000000000000:u256),
    10000000000000000000000000000000000000:s256
  )
  assertEqualS256(
    u256tos256(10000000000000000000000000000000000000000000000:u256),
    10000000000000000000000000000000000000000000000:s256
  )
  assertEqualS256(
    u256tos256(100000000000000000000000000000000000000000000000000000000:u256),
    100000000000000000000000000000000000000000000000000000000:s256
  )
  assertEqualS256(
    u256tos256(100000000000000000000000000000000000000000000000000000000000000000000:u256),
    100000000000000000000000000000000000000000000000000000000000000000000:s256
  )
  assertEqualS256(
    u256tos256(57896044618658097711785492504343953926634992332820282019728792003956564819966:u256),
    57896044618658097711785492504343953926634992332820282019728792003956564819966:s256
  )
  assertEqualS256(
    u256tos256(57896044618658097711785492504343953926634992332820282019728792003956564819967:u256),
    57896044618658097711785492504343953926634992332820282019728792003956564819967:s256
  )
  assertEqualS256(
    u256tos256(57896044618658097711785492504343953926634992332820282019728792003956564819968:u256),
    -57896044618658097711785492504343953926634992332820282019728792003956564819968:s256
  )
  assertEqualS256(
    u256tos256(115792089237316195423570985008687907853269984665640564039457584007913129639934:u256),
    -2:s256
  )
  assertEqualS256(
    u256tos256(115792089237316195423570985008687907853269984665640564039457584007913129639935:u256),
    -1:s256
  )

  function assert (c:bool) { if not(c) { abort() } }
  function assertEqualBool (a:bool, b:bool) { assert(not(xor(a, b))) }
  function assertEqualS256 (a:s256, b:s256) { assert(eqS256(a, b)) }
  function assertEqualU256 (a:u256, b:u256) { assert(eqU256(a, b)) }
  function assertEqualU32 (a:u32, b:u32) { assert(equ256(u32tou256(a), u32tou256(b))) }
  function assertEqualU64 (a:u64, b:u64) { assert(equ256(u64tou256(a), u64tou256(b))) }
  function eqS256 (a:s256, b:s256) -> r:bool { r := not(or(lts256(a, b), lts256(b, a))) }
  function eqU256 (a:u256, b:u256) -> r:bool { r := equ256(a, b) }
}
